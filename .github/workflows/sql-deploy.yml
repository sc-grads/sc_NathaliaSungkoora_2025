name: SSMS Database Automation

on:
  push:
    paths:
      - 'DatabaseAdministration/SQLStatements/Database Automation Scripts/*.sql'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Install SQLCMD Tools
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev

      - name: üß™ Debug Secret Status (safe logging)
        run: |
          echo "‚úÖ DB_SERVER: ${{ secrets.DB_SERVER }}"
          echo "‚úÖ DB_USER: ${{ secrets.DB_USER }}"
          echo "‚úÖ DB_NAME: ${{ secrets.DB_NAME }}"
          [ -z "${{ secrets.DB_PASS }}" ] && echo "‚ùå DB_PASS is missing!" || echo "‚úÖ DB_PASS is set."

      - name: ‚öôÔ∏è Run SQL Scripts
        run: |
          run_sql() {
            local file=$1
            local db=$2
            echo "========================================"
            echo "üöÄ Executing SQL file: $file on database: $db"
            echo "----------------------------------------"
            /opt/mssql-tools/bin/sqlcmd \
              -S "${{ secrets.DB_SERVER }}" \
              -U "${{ secrets.DB_USER }}" \
              -P "${{ secrets.DB_PASS }}" \
              -d "$db" \
              -i "$file"
            if [ $? -eq 0 ]; then
              echo "‚úÖ Success: $file"
            else
              echo "‚ùå Failed: $file"
              exit 1
            fi
            echo "========================================"
          }

          # Run the create DB script on master
          run_sql "DatabaseAdministration/SQLStatements/Database Automation Scripts/01_create_database.sql" "master"

          # Run remaining scripts on the new database
          for file in "DatabaseAdministration/SQLStatements/Database Automation Scripts/"0[2-9]_*.sql
          do
            run_sql "$file" "${{ secrets.DB_NAME }}"
          done
        shell: bash