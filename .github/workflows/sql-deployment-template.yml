name: SQL Deployment Template

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      DB_SERVER:
        required: true
      DB_USER:
        required: true
      DB_PASS:
        required: true
      DB_NAME:
        required: true

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üõ† Install SQLCMD + ODBC Driver
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools unixodbc-dev

      - name: üß™ Debug Secret Status
        run: |
          echo "‚úÖ DB_SERVER is set"
          echo "‚úÖ DB_USER is set"
          echo "‚úÖ DB_NAME is set"
          [ -z "${{ secrets.DB_PASS }}" ] && echo "‚ùå DB_PASS is missing!" || echo "‚úÖ DB_PASS is set"

      - name: ‚öô Run SQL Scripts
        shell: bash
        run: |
          set -e
          trap 'echo "üî• Script failed on line $LINENO. Exiting..."; exit 1' ERR

          run_sql() {
            local file=$1
            local db=$2
            echo "========================================"
            echo "üöÄ Executing $file on $db"
            echo "----------------------------------------"
            if /opt/mssql-tools/bin/sqlcmd \
              -S "${{ secrets.DB_SERVER }}" \
              -U "${{ secrets.DB_USER }}" \
              -P "${{ secrets.DB_PASS }}" \
              -d "$db" \
              -i "$file"; then
              echo "‚úÖ Successfully executed $file"
            else
              echo "‚ùå Error: Failed to execute $file"
              exit 1
            fi
            echo "========================================"
          }

          echo "‚öô Starting SQL Deployment"

          run_sql "DatabaseAdministration/SQLStatements/Database Automation Scripts/01_create_database_sp.sql" "master"

          for file in "DatabaseAdministration/SQLStatements/Database Automation Scripts/"0[2-9]_*.sql; do
            if [ -f "$file" ]; then
              run_sql "$file" "${{ secrets.DB_NAME }}"
            else
              echo "‚ö†Ô∏è Skipping: No matching files found"
            fi
          done
