<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/5/2025 10:28:46 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-JUKB3QVS"
  DTS:CreatorName="LAPTOP-JUKB3QVS\NathaliaSungkoora"
  DTS:DTSID="{1970FDD0-AF7E-4957-8742-8EE645E21AEB}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="ImportTimesheetDataFinal"
  DTS:PackageType="5"
  DTS:VersionBuild="172"
  DTS:VersionGUID="{C4FDC491-1623-4EB0-85CD-D8F7322F4E23}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Add Execute SQL Task For Employee Insert]"
      DTS:CreationName="ADO.NET:SQL"
      DTS:DTSID="{14CA1A2B-7E18-415F-8075-49F40FA7A162}"
      DTS:ObjectName="Add Execute SQL Task For Employee Insert">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=LAPTOP-JUKB3QVS;Integrated Security=SSPI;Connect Timeout=30;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{28BC3BE8-374D-4BFF-A51B-C85E7095AD37}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Documents\Timesheets\Evashan Govender\Evashan Govender May Final Week Timesheet.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{72E3A01D-E5BE-404E-ACEB-9C5B21CF5E46}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="7177"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\NathaliaSungkoora\OneDrive - Northern Data (Pty) Ltd\Documents\NotePad\TimesheetError.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="F1"
              DTS:DTSID="{8358B104-C7BC-4F01-884F-377FB6144852}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="F2"
              DTS:DTSID="{3706DCA0-5528-4236-B800-65FE2C17E962}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="F3"
              DTS:DTSID="{65320EF2-759D-4B39-8359-3E8199AFBB21}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="F4"
              DTS:DTSID="{4A44C80E-6EAC-4A74-8467-C45B15DB47AC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="F5"
              DTS:DTSID="{C8E8C8CD-C960-43AE-93DA-7EE8AA1A2BE9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="F6"
              DTS:DTSID="{1FE04ECA-E25E-414A-8825-23311B1F641C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="F7"
              DTS:DTSID="{5F0D16FE-7AD5-44F7-87C5-79758C0B03D3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="F8"
              DTS:DTSID="{2A72BB28-1193-4BCB-8F88-452F241382D1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="F9"
              DTS:DTSID="{2E4E48D2-9612-4096-9963-001EAB152075}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="F10"
              DTS:DTSID="{077F2E93-BF84-45AF-8C74-B5EE03D75CBC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="Date"
              DTS:DTSID="{40AA7405-5DE7-42D3-A607-F3F2297754A7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DayOfWeek"
              DTS:DTSID="{5A48FC7F-AD25-40F9-B61F-A1F778F2F476}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Client"
              DTS:DTSID="{4907DB82-68C0-4E39-BD32-BE4FD6002D32}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientProjectName"
              DTS:DTSID="{2B6ADD30-217C-432C-B009-42533E042C1F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Description"
              DTS:DTSID="{F956ABE3-A833-4E9E-81AA-F428142BEABC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Billable  or Non Billable"
              DTS:DTSID="{A409F48E-5737-480B-BCB9-24DE7BD043F7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Comments"
              DTS:DTSID="{C550ADEB-46E8-4E38-B23A-31D06D0B3952}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="5"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Hours"
              DTS:DTSID="{752140F4-5475-4687-9334-F42202237145}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="134"
              DTS:TextQualified="True"
              DTS:ObjectName="Start Time"
              DTS:DTSID="{FE1C2815-F80A-4079-974A-24B1F323FD09}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="134"
              DTS:TextQualified="True"
              DTS:ObjectName="End Time"
              DTS:DTSID="{AD035696-A491-4CF5-B85B-5E2C06534AE8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="Date_conv"
              DTS:DTSID="{9104CB91-A056-41D5-A58B-9C0280572D89}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DayOfWeek_conv"
              DTS:DTSID="{25216BFD-7EA9-4C88-8D59-4A87FC4FCDEE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client_conv"
              DTS:DTSID="{7BCBC58D-1985-48BC-99CE-00E9248FA801}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientProjectName_conv"
              DTS:DTSID="{B48BA9E9-E334-401A-93AC-7F4E31D05F80}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Description_conv"
              DTS:DTSID="{31A446AA-F10C-4437-8AC6-320EDFC12993}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Billable  or Non Billable_conv"
              DTS:DTSID="{4872793B-8C5D-4035-8D20-8738D96DA21D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Comments_conv"
              DTS:DTSID="{183AA23A-6BA9-46AD-9F8F-B905ED8BBFAF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="5"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Hours_conv"
              DTS:DTSID="{012EC1C8-7D36-44EA-B45A-22BB511729F3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="Start Time_conv"
              DTS:DTSID="{7982B735-CACD-44B2-95D5-30689A96BDAA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="End Time_conv"
              DTS:DTSID="{28FFD4CE-3308-43C6-B897-3D16DA6D578A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientIDLookup"
              DTS:DTSID="{2434089D-36FF-455D-9D5D-1992B37B5325}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="DescriptionIDLookup"
              DTS:DTSID="{4FF091BD-A89B-4836-BA9C-2218B4CFEDB5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="EmployeeID"
              DTS:DTSID="{9DCC0963-018F-4E3C-9FEB-D7DD69E24934}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{B03D9740-8751-4C99-B331-74A93A5B8B70}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{FB29F4DF-AC7B-47CF-A35E-6DB88A20E7AA}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{278EAF35-A92F-49E1-B5CA-8F6D66F3F252}"
      DTS:ObjectName="LAPTOP-JUKB3QVS.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-JUKB3QVS;Initial Catalog=TimesheetDB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-ImportTimesheetData-{278EAF35-A92F-49E1-B5CA-8F6D66F3F252}LAPTOP-JUKB3QVS.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2B2E1D62-6E7F-48FA-9F65-8E9A7D90C4CC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B871155A-7E41-4218-B65E-C6075EF260FE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{514E82E1-D25A-4776-8535-49F98FE5F183}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Documents\Timesheets\Evashan Govender\Evashan Govender May Final Week Timesheet.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{0B34C71D-FD4C-432B-A514-77F6550F14DE}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{641D02E4-1C4C-4DAD-878F-3237F8F0254C}"
        DTS:ObjectName="{641D02E4-1C4C-4DAD-878F-3237F8F0254C}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Documents\Timesheets\" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Extract Employee From Folder"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{AED201D2-A2F8-4F92-AA21-A834A04F840E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Extract Employee From Folder"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_b752a902196e49738b1eac24a7342f17"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::EmployeeName,User::ExcelFilePath">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b752a902196e49738b1eac24a7342f17.Properties.Settings.get_Default():ST_b752a902196e49738b1eac24a7342f17.Properties.Sett" +
    "ings")]

namespace ST_b752a902196e49738b1eac24a7342f17.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_b752a902196e49738b1eac24a7342f17
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here


            {
                string filePath = Dts.Variables["User::ExcelFilePath"].Value.ToString();
                string folderName = new DirectoryInfo(Path.GetDirectoryName(filePath)).Name;

                Dts.Variables["User::EmployeeName"].Value = folderName;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_b752a902196e49738b1eac24a7342f17.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6B6CC184-6964-4F4B-AA78-F97CE227DE52}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b752a902196e49738b1eac24a7342f17</RootNamespace>
    <AssemblyName>ST_b752a902196e49738b1eac24a7342f17</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b752a902196e49738b1eac24a7342f17</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b752a902196e49738b1eac24a7342f17</msb:DisplayName>
    <msb:ProjectId>{B8CFF858-0B4E-426D-A107-847D1CAD0638}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b752a902196e49738b1eac24a7342f17.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b752a902196e49738b1eac24a7342f17")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_b752a902196e49738b1eac24a7342f17")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b752a902196e49738b1eac24a7342f17.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b752a902196e49738b1eac24a7342f17.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b752a902196e49738b1eac24a7342f17.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b752a902196e49738b1eac24a7342f17.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b752a902196e49738b1eac24a7342f17.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_b752a902196e49738b1eac24a7342f17.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD9XQ2gAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAci4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACAuAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAeA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABU
LgAAAAAAAEgAAAACAAUAHCEAAEwMAAABAAAAAAAAAGgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgBXAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAooFQAACnMWAAAKbxcAAAoKAigQAAAKbxEAAApyKQAAcG8SAAAKBm8YAAAKAigQAAAK
Fm8ZAAAKKh4CKBoAAAoqHgIoGwAACiqufgEAAAQtHnJPAABw0AMAAAIoHAAACm8dAAAKcx4AAAqA
AQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigfAAAKKi5zCAAABoADAAAEKgAAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOgDAAAjfgAAVAQAAKwFAAAjU3RyaW5n
cwAAAAAACgAAxAAAACNVUwDECgAAEAAAACNHVUlEAAAA1AoAAHgBAAAjQmxvYgAAAAAAAAACAAAB
Vx2iAQkDAAAA+gEzABYAAAEAAAAgAAAABQAAAAYAAAAJAAAAAQAAAB8AAAACAAAAEAAAAAEAAAAC
AAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAACoAwEAAAAAAAYASQKVBAYA2AKVBAYAlQGCBA8A
CQUAAAYAwgEmBAYALAImBAYADQImBAYAvwImBAYAaQImBAYAggImBAYA2QEmBAYA9AEQAwoAnQJX
AwoAFAFXAwYA4APZAwYAeAGCBAYAfAXZAwYAZQS1BAYAOAQRBA4ASAGSAw4AqQGSAw4AMAH8AwYA
XQGVBAoAgANXAxIASwW/ABIAeAC/AAYAMwMuAAYAUwQuAAYARAQuAAYA3wDZAwYAgQDZAwYAogUm
BAAAAAAlAAAAAAABAAEAAQAQAPEDAQA5AAEAAQAAABAAvAQYBUUAAQADAAABEABVBRgFWQADAAcA
AwEAAG4FAAA9AAQACgARAOUDcgARAAQBdgARAGgAegAGBlcAfgBWgF4FgQBWgOQAgQBQIAAAAACG
APcDBgABALMgAAAAAIYYdQQGAAEAuyAAAAAAgxh1BAYAAQDDIAAAAACTCGEEhQABAO8gAAAAAJMI
7ACKAAEA9iAAAAAAkwj4AI8AAQD+IAAAAACWCIMFlQACAAUhAAAAAIYYdQQGAAIADSEAAAAAkRh7
BJoAAgAAAAEACgMJAHUEAQARAHUEBgAZAHUECgApAHUEEAAxAHUEEAA5AHUEEABBAHUEEABJAHUE
EABRAHUEEABZAHUEEABhAHUEEABpAHUEBgCBAHUEBgCpAHUEFQC5AHUEBgBxAGYFHwDBAEcFJADJ
ANADKQDRAPYCLwCJACoDMwDZAK4ANwDhAHUEEADpAKUAMwDRAAADPADBAI8FAQBxAHUEBgCJAHUE
BgDxAJMAQQDxAJ4FSACRAHUETgCxAHUEBgAIABQAaAAIABgAbQApAHMA1QAuAAsArQAuABMAtgAu
ABsA1QAuACMA3gAuACsABwEuADMABwEuADsADQEuAEMA3gAuAEsAFQEuAFMABwEuAFsALgFDAGMA
bQBJAHMA1QBhAHsAbQBjAGsAbQAbAAMAAQAEAAMAAABlBJ4AAAAMAaMAAACHBagAAgAEAAMAAgAF
AAUAAQAGAAUAAgAHAAcABIAAAAEAAABIJO+hAAAAAAAAAQAAAAQAAAAAAAAAAAAAAFYAXwAAAAAA
EAAAAAAAAAAAAAAAXwA4AwAAAAAEAAAAAAAAAAAAAABWANkDAAAAABAAAAAAAAAAAAAAAF8AOAAA
AAAAAAAAAAEAAADGBAAABQACAAAAAAAAU1RfYjc1MmE5MDIxOTZlNDk3MzhiMWVhYzI0YTczNDJm
MTcAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1
ZV9fAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBHZXREaXJlY3RvcnlOYW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFs
dWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9iNzUyYTkw
MjE5NmU0OTczOGIxZWFjMjRhNzM0MmYxNy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3Vy
Y2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBEaXJlY3RvcnlJ
bmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYjc1MmE5
MDIxOTZlNDk3MzhiMWVhYzI0YTczNDJmMTcuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNUX2I3NTJhOTAyMTk2ZTQ5NzM4YjFlYWMyNGE3MzQyZjE3LlByb3Bl
cnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAAJ1UAcwBl
AHIAOgA6AEUAeABjAGUAbABGAGkAbABlAFAAYQB0AGgAACVVAHMAZQByADoAOgBFAG0AcABsAG8A
eQBlAGUATgBhAG0AZQAAcVMAVABfAGIANwA1ADIAYQA5ADAAMgAxADkANgBlADQAOQA3ADMAOABi
ADEAZQBhAGMAMgA0AGEANwAzADQAMgBmADEANwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAAAAaFs8d6mq80240tuSxjLhDQAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERUQMHAQ4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4EAAEODgQgAQEcBgABEnkRfQUgABKAgQcg
AgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAAS
SQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9iNzUyYTkwMjE5NmU0OTczOGIxZWFj
MjRhNzM0MmYxNwAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyNQAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0Lje0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAASC4AAAAAAAAAAAAAYi4AAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAFQuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAACIEAAAAAAAAAAAAACIENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDvoUgkAAABAO+hSCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASCAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABeAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwBiADcANQAyAGEAOQAwADIAMQA5ADYAZQA0ADkANwAzADgAYgAxAGUAYQBj
ADIANABhADcAMwA0ADIAZgAxADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4AOQAyADgAOAAuADQAMQA0ADUANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBiADcANQAyAGEAOQAwADIAMQA5ADYAZQA0ADkANwAzADgAYgAxAGUAYQBjADIA
NABhADcAMwA0ADIAZgAxADcALgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUA
ZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAFQAXwBiADcANQAyAGEAOQAwADIAMQA5ADYAZQA0ADkANwAzADgA
YgAxAGUAYQBjADIANABhADcAMwA0ADIAZgAxADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBj
AHQATgBhAG0AZQAAAAAAUwBUAF8AYgA3ADUAMgBhADkAMAAyADEAOQA2AGUANAA5ADcAMwA4AGIA
MQBlAGEAYwAyADQAYQA3ADMANAAyAGYAMQA3AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA5ADIAOAA4AC4ANAAxADQANQA1AAAAAABGAA8AAQBBAHMAcwBlAG0A
YgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADIAOAA4AC4ANAAxADQANQA1AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAB0PgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get Employee ID"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F864FB27-53C6-4050-9846-D6FE47C324C9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Employee ID"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{278EAF35-A92F-49E1-B5CA-8F6D66F3F252}"
              SQLTask:SqlStatementSource="SELECT EmployeeID FROM Employee WHERE FullName = ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::EmployeeID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Clients"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{0E2F59E2-479D-46DF-B1C0-A7AD7BA8F7A4}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Clients"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert Clients\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Inputs[Conditional Split Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Outputs[ValidClients]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ValidClients"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[TRIM](#{Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].Columns[F1]}) != "" &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].Columns[F1]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(F1) != "" &amp;&amp; !ISNULL(F1)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Clients\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Inputs[Data Conversion Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Output].Columns[ClientName_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Output].Columns[ClientName_conv]"
                          name="ClientName_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].Columns[F1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Clients\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Key$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          dataType="wstr"
                          length="255"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          dataType="wstr"
                          length="255"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          dataType="wstr"
                          length="255"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          dataType="wstr"
                          length="255"
                          name="F10" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Clients\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedAt" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Output].Columns[ClientName_conv]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Clients\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Clients\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Lookup.Inputs[Lookup Input].Columns[ClientName_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ClientName_conv"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Output].Columns[ClientName_conv]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup Match Output].Columns[ClientName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup Match Output].Columns[ClientName]"
                          name="ClientName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientName</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientName_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ClientName_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          lineageId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Output].Columns[ClientName_conv]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ClientName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="dbTimeStamp"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert Clients.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Insert Clients\Lookup.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Clients.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Inputs[Conditional Split Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Clients\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Clients.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Insert Clients\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Insert Clients\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Clients.Paths[ValidClients]"
                  endId="Package\Foreach Loop Container\Insert Clients\Data Conversion.Inputs[Data Conversion Input]"
                  name="ValidClients"
                  startId="Package\Foreach Loop Container\Insert Clients\Conditional Split.Outputs[ValidClients]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Description"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{079C0128-F019-4A06-8C19-37A6C75961EA}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Description"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert Description\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Description\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Conditional Split.Inputs[Conditional Split Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].Columns[F5]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Conditional Split.Outputs[ValidDescriptions]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ValidDescriptions"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[TRIM](#{Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].Columns[F5]}) != "" &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].Columns[F5]}) &amp;&amp; #{Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].Columns[F5]} != "Description"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(F5) != "" &amp;&amp; !ISNULL(F5) &amp;&amp; F5 != "Description"</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Description\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Description\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Data Conversion.Inputs[Data Conversion Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].Columns[F5]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]"
                          name="Description_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].Columns[F5]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Description\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Key$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Description\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].Columns[F5]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].Columns[F5]"
                          name="F5"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          dataType="wstr"
                          length="255"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          dataType="wstr"
                          length="255"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          dataType="wstr"
                          length="255"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          dataType="wstr"
                          length="255"
                          name="F10" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          name="F5" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Description\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Description]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Description]) [refTable]
where [refTable].[Description] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DescriptionID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedAt" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Description\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Description\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Lookup.Inputs[Lookup Input].Columns[Description_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Description_conv"
                          lineageId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Description</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup Match Output].Columns[DescriptionLookup]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup Match Output].Columns[DescriptionLookup]"
                          name="DescriptionLookup"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Description</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Description]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Description_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Description_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DescriptionID]"
                          dataType="i4"
                          name="DescriptionID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="dbTimeStamp"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert Description.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Insert Description\Lookup.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Insert Description\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Description.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Insert Description\Conditional Split.Inputs[Conditional Split Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Description\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Description.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Insert Description\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Insert Description\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Description.Paths[ValidDescriptions]"
                  endId="Package\Foreach Loop Container\Insert Description\Data Conversion.Inputs[Data Conversion Input]"
                  name="ValidDescriptions"
                  startId="Package\Foreach Loop Container\Insert Description\Conditional Split.Outputs[ValidDescriptions]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Employee"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{CE2AD109-C033-4408-BBA9-6DF39B35D7AB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Employee"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{278EAF35-A92F-49E1-B5CA-8F6D66F3F252}"
              SQLTask:SqlStatementSource="IF NOT EXISTS (SELECT 1 FROM Employee WHERE FullName = ?)&#xA;BEGIN&#xA;    INSERT INTO Employee (FullName, CreatedAt)&#xA;    VALUES (?, GETDATE())&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Expense Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{C88BADFB-E6FE-4CD5-AA45-73D3DB2467DA}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Expense Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Inputs[Data Conversion Input].Columns[Month]"
                          cachedDataType="date"
                          cachedName="Month"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[Month]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Inputs[Data Conversion Input].Columns[ExpenseDescription]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ExpenseDescription"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[ExpenseDescription]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Inputs[Data Conversion Input].Columns[Type]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Inputs[Data Conversion Input].Columns[ZARCost]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ZARCost"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[ZARCost]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[Month_conv]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[Month_conv]"
                          name="Month_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[Month]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[ExpenseDescription_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[ExpenseDescription_conv]"
                          name="ExpenseDescription_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[ExpenseDescription]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[Type_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[Type_conv]"
                          name="Type_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[Type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[ZARCost_conv]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[ZARCost_conv]"
                          name="ZARCost_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[ZARCost]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Expense Data\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Output].Columns[EmployeeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Output].Columns[EmployeeID]"
                          name="EmployeeID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT F1, F2, F4, F6 

FROM [Expense Claim$A7:F1000] 

WHERE F1 &lt;&gt; NULL

AND     F2 &lt;&gt; NULL</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                          name="Month"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[ExpenseDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[ExpenseDescription]"
                          name="ExpenseDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[Type]"
                          name="Type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[ZARCost]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].Columns[ZARCost]"
                          name="ZARCost"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="date"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          name="F4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[F6]"
                          name="F6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Expense]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Output].Columns[EmployeeID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Month_conv]"
                          cachedDataType="dbDate"
                          cachedName="Month_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[Month_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ExpenseDescription_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ExpenseDescription_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExpenseDescription]"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[ExpenseDescription_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Type_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Type_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Type]"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[Type_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ZARCost_conv]"
                          cachedDataType="decimal"
                          cachedName="ZARCost_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ZarCost]"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output].Columns[ZARCost_conv]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExpenseID]"
                          dataType="i4"
                          name="ExpenseID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                          dataType="wstr"
                          length="10"
                          name="Month" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExpenseDescription]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExpenseDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Type]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ZarCost]"
                          dataType="numeric"
                          name="ZarCost"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="wstr"
                          length="10"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert Expense Data.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Expense Data.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Insert Expense Data\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Expense Data.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Insert Expense Data\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Expense Data\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Leave Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{2692B2C2-33E4-4884-BEFD-9849FA187073}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Leave Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Adding EmployeeID"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Output].Columns[EmployeeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Output].Columns[EmployeeID]"
                          name="EmployeeID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Contact Info"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT F1
 FROM [Leave$]
WHERE F2 IS NULL
AND F1 IS NOT NULL
AND F1 &lt;&gt; 'Address and Telephone Number during Annual Leave'
AND F1 &lt;&gt; 'Employee Signature'
AND F1 &lt;&gt; 'Client Signature'
AND F1 &lt;&gt; 'Please select applicable Leave and state number of days'</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Contact info with DummyKey"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

      

        Row.DummyKey = "1";
    }

}


]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String F1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool F1_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String DummyKey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DummyKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ae09e10516144db8bb436e0148312ee7.Properties.Settings.get_Default():SC_ae09e10516144db8bb436e0148312ee7.Properties.Sett" +
    "ings")]

namespace SC_ae09e10516144db8bb436e0148312ee7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_ae09e10516144db8bb436e0148312ee7.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E63B92E7-621F-41F3-8A2E-FCA4A6413B91}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_ae09e10516144db8bb436e0148312ee7</RootNamespace>
    <AssemblyName>SC_ae09e10516144db8bb436e0148312ee7</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_ae09e10516144db8bb436e0148312ee7</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_ae09e10516144db8bb436e0148312ee7</msb:DisplayName>
    <msb:ProjectId>{B48A46A8-F909-4B18-805D-CD56A745BBEA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_ae09e10516144db8bb436e0148312ee7.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_ae09e10516144db8bb436e0148312ee7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_ae09e10516144db8bb436e0148312ee7")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ae09e10516144db8bb436e0148312ee7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ae09e10516144db8bb436e0148312ee7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ae09e10516144db8bb436e0148312ee7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_ae09e10516144db8bb436e0148312ee7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_ae09e10516144db8bb436e0148312ee7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_ae09e10516144db8bb436e0148312ee7.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMOrRGgAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAjjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADwxAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
MQAAAAAAAEgAAAACAAUAqCEAANwOAAABAAAAAAAAAIQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioyA3IBAABwbwgAAAYqHgIoDAAA
BioqAgMEBSgSAAAKKlICexMAAAoCexQAAAoWlG8VAAAKKiICFigWAAAKKiYCFwMoFwAACipaAywI
AhcoGAAACipyBQAAcHMZAAAKeh4CKBoAAAoqHgIoGwAACip+AigcAAAKAgJzEAAABn0BAAAEAgJz
EQAABn0CAAAEKpIEcqIAAHAabx0AAAosFQIFAgMoHgAACg4EcwUAAAZvDgAABipKKwcCA28PAAAG
A28KAAAGLfEqBio6AigfAAAKAgN9AwAABCo6AigfAAAKAgN9BAAABCoeAigfAAAKKq5+BQAABC0e
crIAAHDQBwAAAiggAAAKbyEAAApzIgAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAE
Kh4CKCMAAAoqLnMXAAAGgAcAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAZAUAACN+AADQBQAALAYAACNTdHJpbmdzAAAAAPwLAAAkAQAAI1VTACANAAAQAAAAI0dVSUQA
AAAwDQAArAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAAAB8AAAAIAAAABwAA
ABgAAAAPAAAAIwAAABAAAAADAAAABwAAAAgAAAABAAAABAAAAAEAAAAAAPQCAQAAAAAABgDrAVUE
BgB/AlUEBgA3AUIEDwDJBAAABgBkAZcDBgDOAZcDBgCvAZcDBgBmApcDBgALApcDBgAkApcDBgB7
AZcDBgCWAboCCgA/AoQACgAUBIQADgAFBIQACgDgA4QACgCPBYQABgBSBU8DBgAaAUIEBgAlBHUE
BgDUA4IDEgDqAN4CEgBLAd4CEgDSAG0DBgD/AFUEBgCpA08DBgDXAk8DBgDDA08DBgClAE8DBgBW
AE8DBgAhBpcDAAAAACwAAAAAAAEAAQABABAAYgMAABAAAQABAAEAEAD4AwAAOQABAAUAAQAQAHEF
AABFAAEADAABABAARgUAAEkAAwAQAAEAEAAHBQAASQAEABEAAAAQAHwE2ARJAAUAEgAAARAANgXY
BGEABwAWAAYARgVzAAYABwV3AAEAfwV7AAEAfwV7ABEAVgN/ABEAwgCDABEARgCHAFAgAAAAAMYA
nQIGAAEAWCAAAAAAxgCoAgYAAQBgIAAAAADGAPEFiwABAG0gAAAAAIYYNQQGAAIAdSAAAAAAhhg1
BBsAAgCAIAAAAACGCAEAkQAFAJUgAAAAAIYIHAM9AAUAniAAAAAAhggQBhAABQCoIAAAAACGCCoD
lQAGAL8gAAAAAIYACAY9AAcAxyAAAAAAhgBZBT0ABwDPIAAAAACGGDUEBgAHAO8gAAAAAMYA5AWa
AAcAFCEAAAAAxgHdBYsACwAnIQAAAADGAfEFiwAMACkhAAAAAIYYNQSkAA0AOCEAAAAAhhg1BKQA
DgBHIQAAAACDGDUEBgAPAE8hAAAAAJMIIQSqAA8AeyEAAAAAkwiqAK8ADwCCIQAAAACTCLYAtAAP
AIohAAAAAJYIZQW6ABAAkSEAAAAAhhg1BAYAEACZIQAAAACRGDsEvwAQAAAAAQAMBgAAAQAaBAAA
AgARBQAAAwDuAwAAAQC0AgAAAQC0AgAAAQA1AAAAAgB6AAAAAwAaBAAABADuAwAAAQAaBAAAAQAM
BgAAAQCVBQAAAQCVBQAAAQC0AgkANQQBABEANQQGABkANQQKACkANQQQADEANQQQADkANQQQAEEA
NQQQAEkANQQQAFEANQQQAFkANQQQAGEANQQQAGkANQQGAJkANQQGALkANQQVAMkANQQGAIkAnQIG
AIkAqAIGAHEANQQbAHEAGgQlAHEAEQUpAHkA1AItAHEANwMyAHEARgM3AHEAPgMBANEANQQQAHEA
CAY9AHEAWQU9AIkANQQGANkAPwVBAIkAJQVIAJEANQQGAOkAaABOAOkAHQZVAKEANQRaAMEANQQG
AC4ACwDaAC4AEwDjAC4AGwACAS4AIwALAS4AKwA0AS4AMwA0AS4AOwA6AS4AQwALAS4ASwBCAS4A
UwA0AS4AWwBbAUMAYwClAakAcwACAckAcwACAeEAewClAeMAawClAQMAAQAHAAUACAAHAAAABQDD
AAAAIAPHAAAAFAbDAAAALgPHAAAAJQTLAAAAygDQAAAAaQXVAAIABgADAAIABwAFAAEACAAHAAEA
CQAJAAIAEwALAAIAFAANAAEAFQANAAIAFgAPAASAAAABAAAAAAAAAAAAAAAAAAgAAAAEAAAAAAAA
AAAAAABhAD0AAAAAABAAAAAAAAAAAAAAAGoAnwUAAAAAEAAAAAAAAAAAAAAAagC8BQAAAAAEAAAA
AAAAAAAAAABhAE8DAAAAAAAAAAABAAAAhgQAAAAAAGdldF9GMQBTQ19hZTA5ZTEwNTE2MTQ0ZGI4
YmI0MzZlMDE0ODMxMmVlNwA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAGRlZmF1bHRJbnN0YW5j
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAEdldFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYWUwOWUxMDUx
NjE0NGRiOGJiNDM2ZTAxNDgzMTJlZTcuZGxsAGdldF9GMV9Jc051bGwAc2V0X0R1bW15S2V5X0lz
TnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAElu
dmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRw
dXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVm
ZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYWUwOWUx
MDUxNjE0NGRiOGJiNDM2ZTAxNDgzMTJlZTcuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNDX2FlMDllMTA1MTYxNDRkYjhiYjQzNmUwMTQ4MzEyZWU3LlByb3Bl
cnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0
aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVz
ZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Q
cm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AHNldF9EdW1teUtleQBn
ZXRfQXNzZW1ibHkAAAAAAzEAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEA
bgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAg
AGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEA
ZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGEAZQAwADkAZQAxADAANQAxADYAMQA0ADQAZABi
ADgAYgBiADQAMwA2AGUAMAAxADQAOAAzADEAMgBlAGUANwAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAWRxGdZbJJkaKDmE9mPJa2wAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERWQkgAwESPR0IEkEDBhI9AwYdCAQgAQ4IBCABAggFIAIBCBwDIAACBiACAg4RcQUgAR0I
CAYAARJ1EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYS
VQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIg
AwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19hZTA5ZTEwNTE2MTQ0ZGI4YmI0MzZlMDE0ODMxMmVl
NwAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyNQAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjcEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAGQxAAAAAAAAAAAAAH4xAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABwMQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA9AMAAAAAAAAAAAAA9AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBFQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADADAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAmAAMAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAEgAUAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBv
AG4AAAAAAFMAQwBfAGEAZQAwADkAZQAxADAANQAxADYAMQA0ADQAZABiADgAYgBiADQAMwA2AGUA
MAAxADQAOAAzADEAMgBlAGUANwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAu
ADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYQBlADAA
OQBlADEAMAA1ADEANgAxADQANABkAGIAOABiAGIANAAzADYAZQAwADEANAA4ADMAMQAyAGUAZQA3
AC4AZABsAGwAAABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABIAFAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBDAF8AYQBlADAAOQBlADEAMAA1ADEANgAxADQANABkAGIAOABiAGIANAAzADYAZQAwADEANAA4
ADMAMQAyAGUAZQA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
QwBfAGEAZQAwADkAZQAxADAANQAxADYAMQA0ADQAZABiADgAYgBiADQAMwA2AGUAMAAxADQAOAAz
ADEAMgBlAGUANwAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
MAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_ae09e10516144db8bb436e0148312ee7</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">9F</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Inputs[Input 0].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Outputs[Output 0].Columns[DummyKey]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Outputs[Output 0].Columns[DummyKey]"
                          name="DummyKey" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[TypeOfLeave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TypeOfLeave"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[TypeOfLeave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[StartDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="StartDate"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[StartDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[EndDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="EndDate"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[EndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[NumberOfDays]"
                          cachedDataType="r8"
                          cachedName="NumberOfDays"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[NumberOfDays]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[ApprovalObtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ApprovalObtained"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[ApprovalObtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[SickNotePovided]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SickNotePovided"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[SickNotePovided]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[ContactInformation]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ContactInformation"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[ContactInformation]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[SubmissionDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SubmissionDate"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[SubmissionDate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ContactInformation]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ContactInformation]"
                          name="Copy of ContactInformation"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[ContactInformation]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of TypeOfLeave]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of TypeOfLeave]"
                          name="Copy of TypeOfLeave"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[TypeOfLeave]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ApprovalObtained]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ApprovalObtained]"
                          name="Copy of ApprovalObtained"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[ApprovalObtained]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SickNotePovided]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SickNotePovided]"
                          name="Copy of SickNotePovided"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[SickNotePovided]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StartDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StartDate]"
                          name="Copy of StartDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[StartDate]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EndDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EndDate]"
                          name="Copy of EndDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[EndDate]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NumberOfDays]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NumberOfDays]"
                          name="Copy of NumberOfDays"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[NumberOfDays]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SubmissionDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SubmissionDate]"
                          name="Copy of SubmissionDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[SubmissionDate]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Destination -&gt;Leave Table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Leave]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Output].Columns[EmployeeID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[Copy of SickNotePovided]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of SickNotePovided"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[SickNoteProvided]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SickNotePovided]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[Copy of TypeOfLeave]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of TypeOfLeave"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of TypeOfLeave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[Copy of StartDate]"
                          cachedDataType="dbDate"
                          cachedName="Copy of StartDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StartDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[Copy of EndDate]"
                          cachedDataType="dbDate"
                          cachedName="Copy of EndDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[Copy of NumberOfDays]"
                          cachedDataType="decimal"
                          cachedName="Copy of NumberOfDays"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NumberOfDays]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[Copy of ApprovalObtained]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of ApprovalObtained"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ApprovalObtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[Copy of SubmissionDate]"
                          cachedDataType="dbDate"
                          cachedName="Copy of SubmissionDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[SubmissionDate]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SubmissionDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].Columns[Copy of ContactInformation]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="Copy of ContactInformation"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[ContactInformation]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ContactInformation]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                          dataType="i4"
                          name="LeaveID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="TypeOfLeave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          dataType="wstr"
                          length="10"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          dataType="wstr"
                          length="10"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          dataType="numeric"
                          name="NumberOfDays"
                          precision="4"
                          scale="1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ApprovalObtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[SickNoteProvided]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="SickNoteProvided" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[ContactInformation]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="ContactInformation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[SubmissionDate]"
                          dataType="wstr"
                          length="10"
                          name="SubmissionDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="wstr"
                          length="10"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Leave"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Leave"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM  [Leave$A11:F1000]

WHERE F1 &lt;&gt; NULL

AND F1 &lt;&gt; "Address and Telephone Number during Annual Leave"

AND F1 &lt;&gt; "Employee Signature"

AND F1 &lt;&gt; "Client Signature"
AND F2  &lt;&gt; NULL
AND F3  &lt;&gt; NULL</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F2]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F2]"
                          name="F2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F3]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F3]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F3]"
                          name="F3"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F4]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F4]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F4]"
                          name="F4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F5]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F5]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F5]"
                          name="F5"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F6]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F6]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F6]"
                          name="F6"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="r8"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F3]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F3]"
                          name="F3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F4]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F4]"
                          name="F4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F5]"
                          name="F5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[F6]"
                          name="F6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Leave with DummyKey"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
  
        /*
         * Add your code here
         */


 public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
       
        Row.DummyKey = "1";
    }

}


]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String F1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool F1_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String F2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool F2_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String F3
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool F3_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Double F4
    {
        get
        {
            return Buffer.GetDouble(BufferColumnIndexes[3]);
        }
    }
    public bool F4_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String F5
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool F5_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String F6
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool F6_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String DummyKey
    {
        set
        {
            this[6] = value;
        }
    }
    public bool DummyKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6e42dc0b7a684fcabd4e2ba3299acf6c.Properties.Settings.get_Default():SC_6e42dc0b7a684fcabd4e2ba3299acf6c.Properties.Sett" +
    "ings")]

namespace SC_6e42dc0b7a684fcabd4e2ba3299acf6c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6e42dc0b7a684fcabd4e2ba3299acf6c.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EB5F8493-8968-416C-8E0F-294762DF375A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_6e42dc0b7a684fcabd4e2ba3299acf6c</RootNamespace>
    <AssemblyName>SC_6e42dc0b7a684fcabd4e2ba3299acf6c</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_6e42dc0b7a684fcabd4e2ba3299acf6c</msb:CodeName>
    <msb:DisplayName>SC_6e42dc0b7a684fcabd4e2ba3299acf6c</msb:DisplayName>
    <msb:ProjectId>{9218A895-C5EC-45B4-BB21-4A794236C18E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_6e42dc0b7a684fcabd4e2ba3299acf6c.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_6e42dc0b7a684fcabd4e2ba3299acf6c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_6e42dc0b7a684fcabd4e2ba3299acf6c")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6e42dc0b7a684fcabd4e2ba3299acf6c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6e42dc0b7a684fcabd4e2ba3299acf6c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6e42dc0b7a684fcabd4e2ba3299acf6c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_6e42dc0b7a684fcabd4e2ba3299acf6c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_6e42dc0b7a684fcabd4e2ba3299acf6c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6e42dc0b7a684fcabd4e2ba3299acf6c.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGKrRGgAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAsjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGAzAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAuBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACU
MwAAAAAAAEgAAAACAAUAPCIAAGwQAAABAAAAAAAAAKgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioyA3IBAABwbxIAAAYqHgIoFgAA
BioqAgMEBSgSAAAKKlICexMAAAoCexQAAAoWlG8VAAAKKiICFigWAAAKKlICexMAAAoCexQAAAoX
lG8VAAAKKiICFygWAAAKKlICexMAAAoCexQAAAoYlG8VAAAKKiICGCgWAAAKKlICexMAAAoCexQA
AAoZlG8XAAAKKiICGSgWAAAKKlICexMAAAoCexQAAAoalG8VAAAKKiICGigWAAAKKlICexMAAAoC
exQAAAoblG8VAAAKKiICGygWAAAKKiYCHAMoGAAACipaAywIAhwoGQAACipyBQAAcHMaAAAKeh4C
KBsAAAoqHgIoHAAACip+AigdAAAKAgJzGgAABn0BAAAEAgJzGwAABn0CAAAEKpIEcqIAAHAabx4A
AAosFQIFAgMoHwAACg4EcwUAAAZvGAAABipKKwcCA28ZAAAGA28UAAAGLfEqBio6AiggAAAKAgN9
AwAABCo6AiggAAAKAgN9BAAABCoeAiggAAAKKq5+BQAABC0ecrIAAHDQBwAAAighAAAKbyIAAApz
IwAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCQAAAoqLnMhAAAGgAcAAAQq
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAHAGAAAjfgAA3AYAAKAGAAAjU3Ry
aW5ncwAAAAB8DQAAJAEAACNVUwCgDgAAEAAAACNHVUlEAAAAsA4AALwBAAAjQmxvYgAAAAAAAAAC
AAABVxWgAQkBAAAA+gEzABYAAAEAAAAfAAAACAAAAAcAAAAiAAAADwAAACQAAAAQAAAAAwAAABEA
AAASAAAAAQAAAAQAAAABAAAAAAAhAwEAAAAAAAYAGALIBAYArALIBAYAZAG1BA8APAUAAAYAkQEK
BAYA+wEKBAYA3AEKBAYAkwIKBAYAOAIKBAYAUQIKBAYAqAEKBAYAwwHnAgoAbAKxAAoAhwSxAA4A
eASxAAoAUwSxAAoAAgaxAAYAxQXCAwYARwG1BAYAmAToBAYARwT1AxIAFwELAxIAeAELAxIA/wDg
AwYALAHIBAYAHATCAwYABAPCAwYANgTCAwYA0gDCAwYAgwDCAwYAlAYKBAAAAAArAAAAAAABAAEA
AQAQANUDAAAQAAEAAQABABAAawQAADkAAQAFAAEAEADkBQAARQABABYAAQAQALkFAABJAAMAGgAB
ABAAegUAAEkABAAbAAAAEADvBEsFSQAFABwAAAEQAKkFSwVhAAcAIAAGALkFeAAGAHoFfAABAPIF
gAABAPIFgAARAMkDhAARAO8AiAARAGkAjABQIAAAAADGAMoCBgABAFggAAAAAMYA1QIGAAEAYCAA
AAAAxgBkBpAAAQBtIAAAAACGGKgEBgACAHUgAAAAAIYYqAQbAAIAgCAAAAAAhggBAJYABQCVIAAA
AACGCEkDQgAFAJ4gAAAAAIYICACWAAUAsyAAAAAAhghXA0IABQC8IAAAAACGCA8AlgAFANEgAAAA
AIYIZQNCAAUA2iAAAAAAhggWAJoABQDvIAAAAACGCHMDQgAFAPggAAAAAIYIHQCWAAUADSEAAAAA
hgiBA0IABQAWIQAAAACGCCQAlgAFACshAAAAAIYIjwNCAAUANCEAAAAAhgiDBhAABQA+IQAAAACG
CJ0DngAGAFUhAAAAAIYAewZCAAcAXSEAAAAAhgDMBUIABwBlIQAAAACGGKgEBgAHAIUhAAAAAMYA
VwajAAcAqiEAAAAAxgFQBpAACwC9IQAAAADGAWQGkAAMAL8hAAAAAIYYqAStAA0AziEAAAAAhhio
BK0ADgDdIQAAAACDGKgEBgAPAOUhAAAAAJMIlASzAA8AESIAAAAAkwjXALgADwAYIgAAAACTCOMA
vQAPACAiAAAAAJYI2AXDABAAJyIAAAAAhhioBAYAEAAvIgAAAACRGK4EyAAQAAAAAQB/BgAAAQCN
BAAAAgCEBQAAAwBhBAAAAQDhAgAAAQDhAgAAAQA0AAAAAgCnAAAAAwCNBAAABABhBAAAAQCNBAAA
AQB/BgAAAQAIBgAAAQAIBgAAAQDhAgkAqAQBABEAqAQGABkAqAQKACkAqAQQADEAqAQQADkAqAQQ
AEEAqAQQAEkAqAQQAFEAqAQQAFkAqAQQAGEAqAQQAGkAqAQGAJkAqAQGALkAqAQVAMkAqAQGAIkA
ygIGAIkA1QIGAHEAqAQbAHEAjQQlAHEAhAUpAHkAAQMtAHEAqgMyAHkAeQA3AHEAuQM8AHEAsQMB
ANEAqAQQAHEAewZCAHEAzAVCAIkAqAQGANkAsgVGAIkAmAVNAJEAqAQGAOkAlQBTAOkAkAZaAKEA
qARfAMEAqAQGAC4ACwDnAC4AEwDwAC4AGwAPAS4AIwAYAS4AKwBBAS4AMwBBAS4AOwBHAS4AQwAY
AS4ASwBPAS4AUwBBAS4AWwBoAUMAYwC2AeEAewC2AeMAawC2AekBcwAPAQkCcwAPAQMAAQAHAA8A
CAARAAAABQDMAAAATQPQAAAADADMAAAAWwPQAAAAEwDMAAAAaQPQAAAAGgDUAAAAdwPQAAAAIQDM
AAAAhQPQAAAAKADMAAAAkwPQAAAAhwbMAAAAoQPQAAAAmATYAAAA9wDdAAAA3AXiAAIABgADAAIA
BwAFAAIACAAHAAIACQAJAAIACgALAAIACwANAAIADAAPAAIADQARAAIADgATAAIADwAVAAIAEAAX
AAIAEQAZAAEAEgAbAAEAEwAdAAIAHQAfAAIAHgAhAAEAHwAhAAIAIAAjAASAAAABAAAAAAAAAAAA
AAAAAEUAAAAEAAAAAAAAAAAAAABmADwAAAAAABAAAAAAAAAAAAAAAG8AEgYAAAAAEAAAAAAAAAAA
AAAAbwAvBgAAAAAEAAAAAAAAAAAAAABmAMIDAAAAAAAAAAABAAAA+QQAAAAAAAAAZ2V0X0YxAGdl
dF9GMgBnZXRfRjMAZ2V0X0Y0AGdldF9GNQBnZXRfRjYAPE1vZHVsZT4ASW5wdXRJRABtc2Nvcmxp
YgBTQ182ZTQyZGMwYjdhNjg0ZmNhYmQ0ZTJiYTMyOTlhY2Y2YwBkZWZhdWx0SW5zdGFuY2UAR2V0
RG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ182ZTQy
ZGMwYjdhNjg0ZmNhYmQ0ZTJiYTMyOTlhY2Y2Yy5kbGwAZ2V0X0YxX0lzTnVsbABnZXRfRjJfSXNO
dWxsAGdldF9GM19Jc051bGwAZ2V0X0Y0X0lzTnVsbABnZXRfRjVfSXNOdWxsAGdldF9GNl9Jc051
bGwAc2V0X0R1bW15S2V5X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1h
bgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNv
bgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxp
bmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU0NfNmU0MmRjMGI3YTY4NGZjYWJkNGUyYmEzMjk5YWNmNmMuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzZlNDJkYzBiN2E2ODRmY2FiZDRl
MmJhMzI5OWFjZjZjLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0
Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93
c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0
Um93AHNldF9EdW1teUtleQBnZXRfQXNzZW1ibHkAAAAAAAMxAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwA2AGUANAAyAGQA
YwAwAGIANwBhADYAOAA0AGYAYwBhAGIAZAA0AGUAMgBiAGEAMwAyADkAOQBhAGMAZgA2AGMALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAGImLLaX6M1Bupq8O9MoAy4A
BCABAQgDIAABBSABARERBCABAQ4FIAEBEVkJIAMBEj0dCBJBAwYSPQMGHQgEIAEOCAQgAQIIBCAB
DQgFIAIBCBwDIAACBiACAg4RcQUgAR0ICAYAARJ1EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRd
zYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAOAyAADQQgAQECCSAEAQgOEj0S
QQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgMoAA0ECAASUQQIABJVBAgA
EiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1ND
XzZlNDJkYzBiN2E2ODRmY2FiZDRlMmJhMzI5OWFjZjZjAAAFAQAAAAAHAQACSFAAABgBABNDb3B5
cmlnaHQgQCBIUCAyMDI1AABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsgNC43LjIEAQAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
iDMAAAAAAAAAAAAAojMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQzAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8ANgBlADQAMgBkAGMAMABiADcAYQA2ADgANABmAGMAYQBiAGQANABlADIAYgBh
ADMAMgA5ADkAYQBjAGYANgBjAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA2AGUANAAy
AGQAYwAwAGIANwBhADYAOAA0AGYAYwBhAGIAZAA0AGUAMgBiAGEAMwAyADkAOQBhAGMAZgA2AGMA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwA2AGUANAAyAGQAYwAwAGIANwBhADYAOAA0AGYAYwBhAGIAZAA0AGUAMgBiAGEAMwAyADkA
OQBhAGMAZgA2AGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8ANgBlADQAMgBkAGMAMABiADcAYQA2ADgANABmAGMAYQBiAGQANABlADIAYgBhADMAMgA5ADkA
YQBjAGYANgBjAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAtDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_6e42dc0b7a684fcabd4e2ba3299acf6c</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">28</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0].Columns[F4]"
                          cachedDataType="r8"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F6]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Outputs[Output 0].Columns[DummyKey]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Outputs[Output 0].Columns[DummyKey]"
                          name="DummyKey" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info"
                  componentClassID="Microsoft.MergeJoin"
                  contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                  name="Merge Join Leave and Contact Info"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of join to perform."
                      name="JoinType"
                      typeConverter="JoinType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the number of columns in the ordering key."
                      name="NumKeyColumns">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the null values are treated as equal values."
                      name="TreatNullsAsEqual">true</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates the requested maximum buffers per input before blocking."
                      name="MaxBuffersPerInput">5</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input]"
                      hasSideEffects="true"
                      name="Merge Join Left Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[DummyKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DummyKey"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[DummyKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F4]"
                          cachedDataType="r8"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F6]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Right Input]"
                      hasSideEffects="true"
                      name="Merge Join Right Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Right Input].Columns[DummyKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DummyKey"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Outputs[Sort Output].Columns[DummyKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Right Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Outputs[Sort Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output]"
                      isSorted="true"
                      name="Merge Join Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[TypeOfLeave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[TypeOfLeave]"
                          name="TypeOfLeave">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F1]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[StartDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[StartDate]"
                          name="StartDate">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F2]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[EndDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[EndDate]"
                          name="EndDate">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F3]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[NumberOfDays]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[NumberOfDays]"
                          name="NumberOfDays">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F4]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[ApprovalObtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[ApprovalObtained]"
                          name="ApprovalObtained">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F5]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[SickNotePovided]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[SickNotePovided]"
                          name="SickNotePovided">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[F6]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[DummyKey]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[DummyKey]"
                          name="DummyKey"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input].Columns[DummyKey]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[ContactInformation]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[ContactInformation]"
                          name="ContactInformation">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Right Input].Columns[F1]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date"
                  componentClassID="Microsoft.MergeJoin"
                  contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                  name="Merge Join Leave and Contact Info -&gt; Submission Date"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of join to perform."
                      name="JoinType"
                      typeConverter="JoinType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the number of columns in the ordering key."
                      name="NumKeyColumns">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the null values are treated as equal values."
                      name="TreatNullsAsEqual">true</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates the requested maximum buffers per input before blocking."
                      name="MaxBuffersPerInput">5</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input]"
                      hasSideEffects="true"
                      name="Merge Join Left Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[DummyKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DummyKey"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[DummyKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[TypeOfLeave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TypeOfLeave"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[TypeOfLeave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[StartDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="StartDate"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[StartDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[EndDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="EndDate"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[EndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[NumberOfDays]"
                          cachedDataType="r8"
                          cachedName="NumberOfDays"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[NumberOfDays]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[ApprovalObtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ApprovalObtained"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[ApprovalObtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[SickNotePovided]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SickNotePovided"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[SickNotePovided]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[ContactInformation]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ContactInformation"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[ContactInformation]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Right Input]"
                      hasSideEffects="true"
                      name="Merge Join Right Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Right Input].Columns[DummyKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DummyKey"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Outputs[Sort Output].Columns[DummyKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Right Input].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Outputs[Sort Output].Columns[F2]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output]"
                      name="Merge Join Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[TypeOfLeave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[TypeOfLeave]"
                          name="TypeOfLeave">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[TypeOfLeave]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[StartDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[StartDate]"
                          name="StartDate">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[StartDate]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[EndDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[EndDate]"
                          name="EndDate">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[EndDate]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[NumberOfDays]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[NumberOfDays]"
                          name="NumberOfDays">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[NumberOfDays]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[ApprovalObtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[ApprovalObtained]"
                          name="ApprovalObtained">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[ApprovalObtained]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[SickNotePovided]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[SickNotePovided]"
                          name="SickNotePovided">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[SickNotePovided]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[ContactInformation]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[ContactInformation]"
                          name="ContactInformation">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input].Columns[ContactInformation]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[SubmissionDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output].Columns[SubmissionDate]"
                          name="SubmissionDate">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The input column associated with this output column"
                              name="InputColumnID">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Right Input].Columns[F2]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort Contact Info"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Inputs[Sort Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output].Columns[F1]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Inputs[Sort Input].Columns[DummyKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DummyKey"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Outputs[Output 0].Columns[DummyKey]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Outputs[Sort Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Outputs[Sort Output].Columns[F1]"
                          name="F1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output].Columns[F1]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Outputs[Sort Output].Columns[DummyKey]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Outputs[Sort Output].Columns[DummyKey]"
                          name="DummyKey"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Outputs[Output 0].Columns[DummyKey]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort Leave"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F1]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F2]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F3]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input].Columns[F4]"
                          cachedDataType="r8"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F4]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F5]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F6]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input].Columns[DummyKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DummyKey"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Outputs[Output 0].Columns[DummyKey]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F1]"
                          name="F1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F1]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F2]"
                          name="F2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F2]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F3]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F3]"
                          name="F3">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F3]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F4]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F4]"
                          name="F4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F4]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F5]"
                          name="F5">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F5]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[F6]"
                          name="F6">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output].Columns[F6]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[DummyKey]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output].Columns[DummyKey]"
                          name="DummyKey"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Outputs[Output 0].Columns[DummyKey]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort Submission Date"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Inputs[Sort Input].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output].Columns[F2]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Inputs[Sort Input].Columns[DummyKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DummyKey"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Outputs[Output 0].Columns[DummyKey]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Outputs[Sort Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Outputs[Sort Output].Columns[F2]"
                          name="F2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output].Columns[F2]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Outputs[Sort Output].Columns[DummyKey]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Outputs[Sort Output].Columns[DummyKey]"
                          name="DummyKey"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Outputs[Output 0].Columns[DummyKey]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sorted Merge Join"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input].Columns[TypeOfLeave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="TypeOfLeave"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[TypeOfLeave]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input].Columns[StartDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="StartDate"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[StartDate]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input].Columns[EndDate]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="EndDate"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[EndDate]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input].Columns[NumberOfDays]"
                          cachedDataType="r8"
                          cachedName="NumberOfDays"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[NumberOfDays]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input].Columns[ApprovalObtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ApprovalObtained"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[ApprovalObtained]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input].Columns[SickNotePovided]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SickNotePovided"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[SickNotePovided]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input].Columns[DummyKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DummyKey"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[DummyKey]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input].Columns[ContactInformation]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ContactInformation"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[ContactInformation]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[TypeOfLeave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[TypeOfLeave]"
                          name="TypeOfLeave">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[TypeOfLeave]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[StartDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[StartDate]"
                          name="StartDate">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[StartDate]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[EndDate]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[EndDate]"
                          name="EndDate">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[EndDate]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[NumberOfDays]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[NumberOfDays]"
                          name="NumberOfDays">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[NumberOfDays]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[ApprovalObtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[ApprovalObtained]"
                          name="ApprovalObtained">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[ApprovalObtained]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[SickNotePovided]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[SickNotePovided]"
                          name="SickNotePovided">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[SickNotePovided]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[DummyKey]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[DummyKey]"
                          name="DummyKey"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[DummyKey]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[ContactInformation]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output].Columns[ContactInformation]"
                          name="ContactInformation">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output].Columns[ContactInformation]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Submission Date"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT F2
FROM [Leave$A11:F1000]


WHERE F1 IS NOT NULL
 
 
AND F1 &lt;&gt; 'Address and Telephone Number during Annual Leave'
  
AND F1 &lt;&gt; 'Employee Signature'
  
AND F1 &lt;&gt; 'Client Signature'
  
AND F2 IS NOT NULL

AND  F3 is null</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output].Columns[F2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output].ExternalColumns[F2]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output].Columns[F2]"
                          name="F2"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Error Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Submission Date with DummyKey"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b354011a0056479d8d33d5754c7ec7ce")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_b354011a0056479d8d33d5754c7ec7ce")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
     

        Row.DummyKey = "1";
    }

}


]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String F2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool F2_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String DummyKey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DummyKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_b354011a0056479d8d33d5754c7ec7ce.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F0FA91DD-280E-40BA-9765-19146F8E997F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_b354011a0056479d8d33d5754c7ec7ce</RootNamespace>
    <AssemblyName>SC_b354011a0056479d8d33d5754c7ec7ce</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_b354011a0056479d8d33d5754c7ec7ce</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_b354011a0056479d8d33d5754c7ec7ce</msb:DisplayName>
    <msb:ProjectId>{F323DA7F-0146-41EF-95C7-D9AB80DB5265}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_b354011a0056479d8d33d5754c7ec7ce.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b354011a0056479d8d33d5754c7ec7ce.Properties.Settings.get_Default():SC_b354011a0056479d8d33d5754c7ec7ce.Properties.Sett" +
    "ings")]

namespace SC_b354011a0056479d8d33d5754c7ec7ce.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b354011a0056479d8d33d5754c7ec7ce.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b354011a0056479d8d33d5754c7ec7ce.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b354011a0056479d8d33d5754c7ec7ce.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b354011a0056479d8d33d5754c7ec7ce.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b354011a0056479d8d33d5754c7ec7ce.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_b354011a0056479d8d33d5754c7ec7ce.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGisRGgAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAjjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADwxAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
MQAAAAAAAEgAAAACAAUAqCEAANwOAAABAAAAAAAAAIQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioyA3IBAABwbwgAAAYqHgIoDAAA
BioqAgMEBSgSAAAKKlICexMAAAoCexQAAAoWlG8VAAAKKiICFigWAAAKKiYCFwMoFwAACipaAywI
AhcoGAAACipyBQAAcHMZAAAKeh4CKBoAAAoqHgIoGwAACip+AigcAAAKAgJzEAAABn0BAAAEAgJz
EQAABn0CAAAEKpIEcqIAAHAabx0AAAosFQIFAgMoHgAACg4EcwUAAAZvDgAABipKKwcCA28PAAAG
A28KAAAGLfEqBio6AigfAAAKAgN9AwAABCo6AigfAAAKAgN9BAAABCoeAigfAAAKKq5+BQAABC0e
crIAAHDQBwAAAiggAAAKbyEAAApzIgAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAE
Kh4CKCMAAAoqLnMXAAAGgAcAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAZAUAACN+AADQBQAALAYAACNTdHJpbmdzAAAAAPwLAAAkAQAAI1VTACANAAAQAAAAI0dVSUQA
AAAwDQAArAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAAAB8AAAAIAAAABwAA
ABgAAAAPAAAAIwAAABAAAAADAAAABwAAAAgAAAABAAAABAAAAAEAAAAAAPQCAQAAAAAABgDrAVUE
BgB/AlUEBgA3AUIEDwDJBAAABgBkAZcDBgDOAZcDBgCvAZcDBgBmApcDBgALApcDBgAkApcDBgB7
AZcDBgCWAboCCgA/AoQACgAUBIQADgAFBIQACgDgA4QACgCPBYQABgBSBU8DBgAaAUIEBgAlBHUE
BgDUA4IDEgDqAN4CEgBLAd4CEgDSAG0DBgD/AFUEBgCpA08DBgDXAk8DBgDDA08DBgClAE8DBgBW
AE8DBgAhBpcDAAAAAAgAAAAAAAEAAQABABAAYgMAABAAAQABAAEAEAD4AwAAOQABAAUAAQAQAHEF
AABFAAEADAABABAARgUAAEkAAwAQAAEAEAAHBQAASQAEABEAAAAQAHwE2ARJAAUAEgAAARAANgXY
BGEABwAWAAYARgVzAAYABwV3AAEAfwV7AAEAfwV7ABEAVgN/ABEAwgCDABEARgCHAFAgAAAAAMYA
nQIGAAEAWCAAAAAAxgCoAgYAAQBgIAAAAADGAPEFiwABAG0gAAAAAIYYNQQGAAIAdSAAAAAAhhg1
BBsAAgCAIAAAAACGCAEAkQAFAJUgAAAAAIYIHAM9AAUAniAAAAAAhggQBhAABQCoIAAAAACGCCoD
lQAGAL8gAAAAAIYACAY9AAcAxyAAAAAAhgBZBT0ABwDPIAAAAACGGDUEBgAHAO8gAAAAAMYA5AWa
AAcAFCEAAAAAxgHdBYsACwAnIQAAAADGAfEFiwAMACkhAAAAAIYYNQSkAA0AOCEAAAAAhhg1BKQA
DgBHIQAAAACDGDUEBgAPAE8hAAAAAJMIIQSqAA8AeyEAAAAAkwiqAK8ADwCCIQAAAACTCLYAtAAP
AIohAAAAAJYIZQW6ABAAkSEAAAAAhhg1BAYAEACZIQAAAACRGDsEvwAQAAAAAQAMBgAAAQAaBAAA
AgARBQAAAwDuAwAAAQC0AgAAAQC0AgAAAQARAAAAAgB6AAAAAwAaBAAABADuAwAAAQAaBAAAAQAM
BgAAAQCVBQAAAQCVBQAAAQC0AgkANQQBABEANQQGABkANQQKACkANQQQADEANQQQADkANQQQAEEA
NQQQAEkANQQQAFEANQQQAFkANQQQAGEANQQQAGkANQQGAJkANQQGALkANQQVAMkANQQGAIkAnQIG
AIkAqAIGAHEANQQbAHEAGgQlAHEAEQUpAHkA1AItAHEANwMyAHEARgM3AHEAPgMBANEANQQQAHEA
CAY9AHEAWQU9AIkANQQGANkAPwVBAIkAJQVIAJEANQQGAOkAaABOAOkAHQZVAKEANQRaAMEANQQG
AC4ACwDaAC4AEwDjAC4AGwACAS4AIwALAS4AKwA0AS4AMwA0AS4AOwA6AS4AQwALAS4ASwBCAS4A
UwA0AS4AWwBbAUMAYwClAakAcwACAckAcwACAeEAewClAeMAawClAQMAAQAHAAUACAAHAAAABQDD
AAAAIAPHAAAAFAbDAAAALgPHAAAAJQTLAAAAygDQAAAAaQXVAAIABgADAAIABwAFAAEACAAHAAEA
CQAJAAIAEwALAAIAFAANAAEAFQANAAIAFgAPAASAAAABAAAAAAAAAAAAAAAAACIAAAAEAAAAAAAA
AAAAAABhABkAAAAAABAAAAAAAAAAAAAAAGoAnwUAAAAAEAAAAAAAAAAAAAAAagC8BQAAAAAEAAAA
AAAAAAAAAABhAE8DAAAAAAAAAAABAAAAhgQAAAAAAGdldF9GMgA8TW9kdWxlPgBJbnB1dElEAG1z
Y29ybGliAFNDX2IzNTQwMTFhMDA1NjQ3OWQ4ZDMzZDU3NTRjN2VjN2NlAGRlZmF1bHRJbnN0YW5j
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAEdldFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYjM1NDAxMWEw
MDU2NDc5ZDhkMzNkNTc1NGM3ZWM3Y2UuZGxsAGdldF9GMl9Jc051bGwAc2V0X0R1bW15S2V5X0lz
TnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAElu
dmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRw
dXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVm
ZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYjM1NDAx
MWEwMDU2NDc5ZDhkMzNkNTc1NGM3ZWM3Y2UuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNDX2IzNTQwMTFhMDA1NjQ3OWQ4ZDMzZDU3NTRjN2VjN2NlLlByb3Bl
cnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0
aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVz
ZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Q
cm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AHNldF9EdW1teUtleQBn
ZXRfQXNzZW1ibHkAAAAAAzEAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEA
bgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAg
AGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEA
ZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGIAMwA1ADQAMAAxADEAYQAwADAANQA2ADQANwA5
AGQAOABkADMAMwBkADUANwA1ADQAYwA3AGUAYwA3AGMAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAz5+Y3GSPnEStxbvDeO3ZAgAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERWQkgAwESPR0IEkEDBhI9AwYdCAQgAQ4IBCABAggFIAIBCBwDIAACBiACAg4RcQUgAR0I
CAYAARJ1EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYS
VQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIg
AwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19iMzU0MDExYTAwNTY0NzlkOGQzM2Q1NzU0YzdlYzdj
ZQAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyNQAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjcEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAGQxAAAAAAAAAAAAAH4xAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABwMQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA9AMAAAAAAAAAAAAA9AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBFQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADADAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAmAAMAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAEgAUAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBv
AG4AAAAAAFMAQwBfAGIAMwA1ADQAMAAxADEAYQAwADAANQA2ADQANwA5AGQAOABkADMAMwBkADUA
NwA1ADQAYwA3AGUAYwA3AGMAZQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAu
ADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYgAzADUA
NAAwADEAMQBhADAAMAA1ADYANAA3ADkAZAA4AGQAMwAzAGQANQA3ADUANABjADcAZQBjADcAYwBl
AC4AZABsAGwAAABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABIAFAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBDAF8AYgAzADUANAAwADEAMQBhADAAMAA1ADYANAA3ADkAZAA4AGQAMwAzAGQANQA3ADUANABj
ADcAZQBjADcAYwBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
QwBfAGIAMwA1ADQAMAAxADEAYQAwADAANQA2ADQANwA5AGQAOABkADMAMwBkADUANwA1ADQAYwA3
AGUAYwA3AGMAZQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
MAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_b354011a0056479d8d33d5754c7ec7ce</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">A0</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Inputs[Input 0].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output].Columns[F2]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Outputs[Output 0].Columns[DummyKey]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Outputs[Output 0].Columns[DummyKey]"
                          name="DummyKey" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Inputs[Input 0]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Submission Date.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Excel Source Output1]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Inputs[Input 0]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Contact Info.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Excel Source Output2]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Inputs[Input 0]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Leave.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Merge Join Output]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Inputs[Sort Input]"
                  name="Merge Join Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Outputs[Merge Join Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Merge Join Output1]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID.Inputs[Derived Column Input]"
                  name="Merge Join Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Outputs[Merge Join Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Inputs[Sort Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Output 01]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Inputs[Sort Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Output 02]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Inputs[Sort Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Sort Output]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Left Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Sort Leave.Outputs[Sort Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Sort Output1]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info.Inputs[Merge Join Right Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info.Outputs[Sort Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Sort Output2]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Left Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join.Outputs[Sort Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Sort Output3]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date.Inputs[Merge Join Right Input]"
                  name="Sort Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Timesheet"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{BC33A3A2-0491-40DF-ABE1-A75B266BBCD9}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Timesheet"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Client Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedAt" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Inputs[Lookup Input].Columns[Client_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Client_conv"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Match Output].Columns[ClientIDLookup]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Match Output].Columns[ClientIDLookup]"
                          name="ClientIDLookup"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input].Columns[DayOfWeek]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DayOfWeek"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input].Columns[ClientProjectName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ClientProjectName"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Total Hours"
                          cachedPrecision="5"
                          cachedScale="2"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[DayOfWeek_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[DayOfWeek_conv]"
                          name="DayOfWeek_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]"
                          name="Client_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[ClientProjectName_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[ClientProjectName_conv]"
                          name="ClientProjectName_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]"
                          name="Description_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Billable or Non Billable_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Billable or Non Billable_conv]"
                          name="Billable or Non Billable_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Comments_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Comments_conv]"
                          name="Comments_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Total Hours_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Total Hours_conv]"
                          name="Total Hours_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F1]"
                          cachedDataType="date"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F4]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F7]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F7"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F9]"
                          cachedDataType="date"
                          cachedName="F9"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input].Columns[F10]"
                          cachedDataType="date"
                          cachedName="F10"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBDATE)#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBDATE)F1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]"
                          name="DayOfWeek"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F3</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]"
                          name="ClientProjectName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F4</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F5</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F6</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F7</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]"
                          name="Total Hours"
                          precision="5"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_NUMERIC,5,2)(([DATEDIFF]("mi",#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]},#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]})) / 60.0)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_NUMERIC,5,2)((DATEDIFF("mi",F9,F10)) / 60.0)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIME)#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIME)F9</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIME)#{Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIME)F10</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Output].Columns[EmployeeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Output].Columns[EmployeeID]"
                          name="EmployeeID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Description Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Description]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Description]) [refTable]
where [refTable].[Description] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DescriptionID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedAt" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Inputs[Lookup Input].Columns[Description_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Description_conv"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Description</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Match Output].Columns[DescriptionIDLookUp]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Match Output].Columns[DescriptionIDLookUp]"
                          name="DescriptionIDLookUp"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">DescriptionID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * 
FROM [May$A8:L200] 
WHERE F1 IS NOT NULL</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]"
                          name="F2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]"
                          name="F3"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]"
                          name="F4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]"
                          name="F5"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]"
                          name="F6"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]"
                          name="F7"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F8]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F8]"
                          name="F8"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]"
                          name="F9"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]"
                          name="F10"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="date"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          dataType="wstr"
                          length="255"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          dataType="date"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          dataType="date"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          dataType="date"
                          name="F10" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F3]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F3]"
                          name="F3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          name="F4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          name="F5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F6]"
                          name="F6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F7]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F7]"
                          name="F7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F8]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F8]"
                          name="F8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F9]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F9]"
                          name="F9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F10]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F10]"
                          name="F10" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Timesheet]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LAPTOP-JUKB3QVS.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Output].Columns[EmployeeID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date]"
                          cachedDataType="dbDate"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DayOfWeek_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DayOfWeek_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[DayOfWeek_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientIDLookup]"
                          cachedDataType="i4"
                          cachedName="ClientIDLookup"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Match Output].Columns[ClientIDLookup]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientProjectName_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ClientProjectName_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProjectName]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[ClientProjectName_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DescriptionIDLookUp]"
                          cachedDataType="i4"
                          cachedName="DescriptionIDLookUp"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DescriptionID]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Match Output].Columns[DescriptionIDLookUp]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Comments_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Comments_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Comments_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Hours_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Total Hours_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Total Hours_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Start Time"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[End Time]"
                          cachedDataType="dbTime"
                          cachedName="End Time"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Billable or Non Billable_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Billable or Non Billable_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Billable or Non Billable_conv]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetID]"
                          dataType="i4"
                          name="TimesheetID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          dataType="wstr"
                          length="10"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="DayOfWeek" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProjectName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProjectName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DescriptionID]"
                          dataType="i4"
                          name="DescriptionID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Billable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          dataType="numeric"
                          name="TotalHours"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="wstr"
                          length="16"
                          name="StartTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="wstr"
                          length="16"
                          name="EndTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="dbTimeStamp"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert Timesheet.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Timesheet.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Insert Timesheet\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Timesheet.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Timesheet.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Insert Timesheet\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Timesheet\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Timesheet.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Insert Timesheet\Client Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Timesheet.Paths[Lookup Match Output1]"
                  endId="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Insert Timesheet\Description Lookup.Outputs[Lookup Match Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{C126CD9C-7785-4BC3-9921-34E30C4CE54E}"
          DTS:From="Package\Foreach Loop Container\Extract Employee From Folder"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Insert Employee" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{D5662D20-D75B-4533-9B8C-F9F79FE67AE7}"
          DTS:From="Package\Foreach Loop Container\Insert Employee"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Get Employee ID" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{97E8905C-BDCF-4D0D-B3C4-407621803783}"
          DTS:From="Package\Foreach Loop Container\Insert Description"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Insert Timesheet" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{AFC6BC3B-E073-433C-A686-BCDBD8564263}"
          DTS:From="Package\Foreach Loop Container\Get Employee ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Insert Clients" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{B4765EC9-3964-4ACA-851D-ECD620F476C2}"
          DTS:From="Package\Foreach Loop Container\Get Employee ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\Insert Description" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{839BA28E-6C9F-4BAC-A234-94C477F585D3}"
          DTS:From="Package\Foreach Loop Container\Get Employee ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Insert Expense Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{11A86314-45C6-4D97-A9A0-760A9CCCA7F2}"
          DTS:From="Package\Foreach Loop Container\Get Employee ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach Loop Container\Insert Leave Data" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{7ECA8B36-2125-4A26-B201-4DF6274F9974}"
          DTS:ObjectName="{7ECA8B36-2125-4A26-B201-4DF6274F9974}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ExcelFilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="219.2,41.6"
          Id="Package\Foreach Loop Container\Extract Employee From Folder"
          TopLeft="17.8666641169125,5.5" />
        <NodeLayout
          Size="157.6,41.6"
          Id="Package\Foreach Loop Container\Get Employee ID"
          TopLeft="43.6999960387745,178.833332127995" />
        <NodeLayout
          Size="139.2,46.4"
          Id="Package\Foreach Loop Container\Insert Clients"
          TopLeft="32.0333300095465,335.699997703831" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Foreach Loop Container\Insert Description"
          TopLeft="255.366651140485,180.566665449274" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container\Insert Employee"
          TopLeft="44.5333293265765,102.566665991678" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Foreach Loop Container\Insert Expense Data"
          TopLeft="533.699969266356,280.233331422873" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data"
          TopLeft="422.866641988688,385.099997360309" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Insert Timesheet"
          TopLeft="261.1999841551,325.299997776151" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="124.399996721745,47.1000000000002">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.4666659916777"
              Start="0,0"
              End="0,47.9666659916777">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.9666659916777" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="121.916662682676,144.166665991678">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.6666661363179"
              Start="0,0"
              End="0,27.1666661363179">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.1666661363179" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="337.083317647792,222.166665449274">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,103.133332326876"
              Start="0,0"
              End="0,95.633332326876">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,95.633332326876" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="85.0999960387746,220.433332127995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.5333339707719,115.266665575836"
              Start="0,0"
              End="16.5333339707719,107.766665575836">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.7008315710449" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.7008315710449"
                    Point2="0,39.7008315710449"
                    Point3="4,39.7008315710449" />
                  <mssgle:LineSegment
                    End="12.5333339707719,39.7008315710449" />
                  <mssgle:CubicBezierSegment
                    Point1="12.5333339707719,39.7008315710449"
                    Point2="16.5333339707719,39.7008315710449"
                    Point3="16.5333339707719,43.7008315710449" />
                  <mssgle:LineSegment
                    End="16.5333339707719,107.766665575836" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="201.299996038775,200.499998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54.0666551017109,0"
              Start="0,0"
              End="46.5666551017109,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="46.5666551017109,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="159.899996038775,220.433332127995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="459.799973227582,59.7999992948772"
              Start="0,0"
              End="459.799973227582,52.2999992948772">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5966719701158" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5966719701158"
                    Point2="0,20.5966719701158"
                    Point3="4,20.5966719701158" />
                  <mssgle:LineSegment
                    End="455.799973227582,20.5966719701158" />
                  <mssgle:CubicBezierSegment
                    Point1="455.799973227582,20.5966719701158"
                    Point2="459.799973227582,20.5966719701158"
                    Point3="459.799973227582,24.5966719701158" />
                  <mssgle:LineSegment
                    End="459.799973227582,52.2999992948772" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="122.499996038775,220.433332127995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="388.366645949914,164.666665232314"
              Start="0,0"
              End="388.366645949914,157.166665232314">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,78.3333326161569" />
                  <mssgle:CubicBezierSegment
                    Point1="0,78.3333326161569"
                    Point2="0,82.3333326161569"
                    Point3="4,82.3333326161569" />
                  <mssgle:LineSegment
                    End="384.366645949914,82.3333326161569" />
                  <mssgle:CubicBezierSegment
                    Point1="384.366645949914,82.3333326161569"
                    Point2="388.366645949914,82.3333326161569"
                    Point3="388.366645949914,86.3333326161569" />
                  <mssgle:LineSegment
                    End="388.366645949914,157.166665232314" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="710.4,481.6"
          Size="710.4,524.8"
          Id="Package\Foreach Loop Container"
          TopLeft="78.3333290533888,105.63703630245" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert Clients">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Insert Clients\Lookup"
          TopLeft="241.999996393919,356.999994680286" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Insert Clients\Data Conversion"
          TopLeft="222.999996677041,283.99999576807" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\Insert Clients\Excel Source"
          TopLeft="222.999996677041,113.999998301268" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert Clients\OLE DB Destination"
          TopLeft="238.999996438623,434.999993517995" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container\Insert Clients\Conditional Split"
          TopLeft="219.999996721745,202.999996975064" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Clients.Paths[Lookup No Match Output]"
          TopLeft="298.399996393919,398.599994680286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26.2000000447035,36.3999988377094"
              Start="0,0"
              End="26.2000000447035,28.8999988377094">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.1999994188547" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.1999994188547"
                    Point2="0,18.1999994188547"
                    Point3="4,18.1999994188547" />
                  <mssgle:LineSegment
                    End="22.2000000447035,18.1999994188547" />
                  <mssgle:CubicBezierSegment
                    Point1="22.2000000447035,18.1999994188547"
                    Point2="26.2000000447035,18.1999994188547"
                    Point3="26.2000000447035,22.1999994188547" />
                  <mssgle:LineSegment
                    End="26.2000000447035,28.8999988377094" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-42.7063866963982,23.1999994188547,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Clients.Paths[Excel Source Output]"
          TopLeft="294.899996699393,155.599998301268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.3999986737967"
              Start="0,0"
              End="0,39.8999986737967">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8999986737967" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Clients.Paths[Data Conversion Output]"
          TopLeft="299.69999653548,325.59999576807">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.3999989122152"
              Start="0,0"
              End="0,23.8999989122152">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8999989122152" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Clients.Paths[ValidClients]"
          TopLeft="298.899996699393,244.599996975064">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.399998793006"
              Start="0,0"
              End="0,31.899998793006">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.899998793006" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.20576171875,11.075487677753,52.4115234375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Clients\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Client]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Clients\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Clients\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert Description">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Foreach Loop Container\Insert Description\Lookup"
          TopLeft="384.999994263053,354.999994710088" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Insert Description\Data Conversion"
          TopLeft="352.99999473989,272.999995931983" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\Insert Description\Excel Source"
          TopLeft="346.999994829297,92.999998614192" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert Description\OLE DB Destination"
          TopLeft="365.999994546175,441.999993413687" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container\Insert Description\Conditional Split"
          TopLeft="355.999994695187,183.999997258186" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Description.Paths[Lookup No Match Output]"
          TopLeft="441.399994263053,396.599994710088">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.2000002831218,45.3999987035989"
              Start="0,0"
              End="10.2000002831218,37.8999987035989">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6999993517994" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6999993517994"
                    Point2="0,22.6999993517994"
                    Point3="4,22.6999993517994" />
                  <mssgle:LineSegment
                    End="6.20000028312182,22.6999993517994" />
                  <mssgle:CubicBezierSegment
                    Point1="6.20000028312182,22.6999993517994"
                    Point2="10.2000002831218,22.6999993517994"
                    Point3="10.2000002831218,26.6999993517994" />
                  <mssgle:LineSegment
                    End="10.2000002831218,37.8999987035989" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-50.7063865771891,27.6999993517994,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Description.Paths[Excel Source Output]"
          TopLeft="416.999994829297,134.599998614192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.7999998658895,49.3999986439943"
              Start="0,0"
              End="15.7999998658895,41.8999986439943">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.6999993219972" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.6999993219972"
                    Point2="0,24.6999993219972"
                    Point3="4,24.6999993219972" />
                  <mssgle:LineSegment
                    End="11.7999998658895,24.6999993219972" />
                  <mssgle:CubicBezierSegment
                    Point1="11.7999998658895,24.6999993219972"
                    Point2="15.7999998658895,24.6999993219972"
                    Point3="15.7999998658895,28.6999993219972" />
                  <mssgle:LineSegment
                    End="15.7999998658895,41.8999986439943" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Description.Paths[Data Conversion Output]"
          TopLeft="430.99999473989,314.599995931983">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.3999995231629,40.3999987781047"
              Start="0,0"
              End="10.3999995231629,32.8999987781047">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.1999993890524" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.1999993890524"
                    Point2="0,20.1999993890524"
                    Point3="4,20.1999993890524" />
                  <mssgle:LineSegment
                    End="6.39999952316288,20.1999993890524" />
                  <mssgle:CubicBezierSegment
                    Point1="6.39999952316288,20.1999993890524"
                    Point2="10.3999995231629,20.1999993890524"
                    Point3="10.3999995231629,24.1999993890524" />
                  <mssgle:LineSegment
                    End="10.3999995231629,32.8999987781047" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Description.Paths[ValidDescriptions]"
          TopLeft="431.899994717538,225.599997258186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.3999986737967"
              Start="0,0"
              End="0,39.8999986737967">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8999986737967" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.40576171875,14.1453118368983,76.8115234375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Description\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Description]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Description\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Description\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert Expense Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\Insert Expense Data\Excel Source"
          TopLeft="264.999996051192,127.999998092651" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container\Insert Expense Data\Derived Column"
          TopLeft="264.999996051192,213.999996811152" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Insert Expense Data\Data Conversion"
          TopLeft="264.999996051192,279.999995827675" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination"
          TopLeft="259.999996125698,383.999994277954" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Expense Data.Paths[Excel Source Output]"
          TopLeft="338.199996051192,169.599998092651">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.3999987185001"
              Start="0,0"
              End="0,36.8999987185001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.8999987185001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Expense Data.Paths[Derived Column Output]"
          TopLeft="342.199996051192,255.599996811152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.3999990165233"
              Start="0,0"
              End="0,16.8999990165233">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8999990165233" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Expense Data.Paths[Data Conversion Output]"
          TopLeft="344.299996088445,321.599995827675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.3999984502792"
              Start="0,0"
              End="0,54.8999984502792">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.8999984502792" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Expense Data\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Expense Data\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert Leave Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="184.8,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Leave with DummyKey"
          TopLeft="44.1666642535065,174.199998788635" />
        <NodeLayout
          Size="235.2,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Submission Date with DummyKey"
          TopLeft="501.66663925681,172.466665467355" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Sort Submission Date"
          TopLeft="530.83330432988,266.066664816472" />
        <NodeLayout
          Size="212,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Contact info with DummyKey"
          TopLeft="268.333318672247,176.799998770555" />
        <NodeLayout
          Size="128.8,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Sort Leave"
          TopLeft="77.4999957655868,266.933331477112" />
        <NodeLayout
          Size="106.4,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Leave"
          TopLeft="90.6666704151368,90.0666650628379" />
        <NodeLayout
          Size="240,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info"
          TopLeft="149.999991804362,352.73333088047" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Submission Date"
          TopLeft="536.666637344494,97.9333326523172" />
        <NodeLayout
          Size="333.6,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Merge Join Leave and Contact Info -&gt; Submission Date"
          TopLeft="445.833308974075,419.466663749748" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Sort Contact Info"
          TopLeft="297.499983745317,266.933331477112" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Sorted Merge Join"
          TopLeft="227.499987569949,419.466663749748" />
        <NodeLayout
          Size="134.4,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Contact Info"
          TopLeft="299.333333707517,94.3333316521511" />
        <NodeLayout
          Size="200,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table"
          TopLeft="519.999971588454,698.666663098865" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Data Conversion"
          TopLeft="546.666636798118,600.533329452144" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Foreach Loop Container\Insert Leave Data\Adding EmployeeID"
          TopLeft="533.333304193286,520.866663044625" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Sort Output3]"
          TopLeft="616.533306651977,307.666664816472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,111.799998933276"
              Start="0,0"
              End="0,104.299998933276">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,104.299998933276" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Sort Output2]"
          TopLeft="390.699987569949,440.266663749748">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.1333214041262,0"
              Start="0,0"
              End="47.6333214041262,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.6333214041262,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Sort Output1]"
          TopLeft="375.499983745317,308.533331477112">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-66.8333252742889,44.1999994033574"
              Start="0,0"
              End="-66.8333252742889,36.6999994033574">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3443705053123" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.3443705053123"
                    Point2="0,26.3443705053123"
                    Point3="-4,26.3443705053123" />
                  <mssgle:LineSegment
                    End="-62.8333252742889,26.3443705053123" />
                  <mssgle:CubicBezierSegment
                    Point1="-62.8333252742889,26.3443705053123"
                    Point2="-66.8333252742889,26.3443705053123"
                    Point3="-66.8333252742889,30.3443705053123" />
                  <mssgle:LineSegment
                    End="-66.8333252742889,36.6999994033574" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Sort Output]"
          TopLeft="141.899995765587,308.533331477112">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="89.4333293721082,44.1999994033576"
              Start="0,0"
              End="89.4333293721082,36.6999994033576">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3443705053125" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.3443705053125"
                    Point2="0,26.3443705053125"
                    Point3="4,26.3443705053125" />
                  <mssgle:LineSegment
                    End="85.4333293721082,26.3443705053125" />
                  <mssgle:CubicBezierSegment
                    Point1="85.4333293721082,26.3443705053125"
                    Point2="89.4333293721082,26.3443705053125"
                    Point3="89.4333293721082,30.3443705053125" />
                  <mssgle:LineSegment
                    End="89.4333293721082,36.6999994033576" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Output 02]"
          TopLeft="619.849971793345,214.066665467355">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.9999993491173"
              Start="0,0"
              End="0,44.4999993491173">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.4999993491173" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Output 01]"
          TopLeft="374.916651208782,218.399998770555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.5333327065576"
              Start="0,0"
              End="0,41.0333327065576">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.0333327065576" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Output 0]"
          TopLeft="139.233330009547,215.799998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.1333326884773"
              Start="0,0"
              End="0,43.6333326884773">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.6333326884773" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Merge Join Output1]"
          TopLeft="615.583306583681,461.066663749748">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.7999992948774"
              Start="0,0"
              End="0,52.2999992948774">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.2999992948774" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Merge Join Output]"
          TopLeft="269.999991804362,394.33333088047">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.0999957655869,25.133332869278"
              Start="0,0"
              End="39.0999957655869,17.633332869278">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.56666643463899" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.56666643463899"
                    Point2="0,12.566666434639"
                    Point3="4,12.566666434639" />
                  <mssgle:LineSegment
                    End="35.0999957655869,12.566666434639" />
                  <mssgle:CubicBezierSegment
                    Point1="35.0999957655869,12.566666434639"
                    Point2="39.0999957655869,12.566666434639"
                    Point3="39.0999957655869,16.566666434639" />
                  <mssgle:LineSegment
                    End="39.0999957655869,17.633332869278" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Excel Source Output2]"
          TopLeft="140.216667334322,131.666665062838">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.533333725797"
              Start="0,0"
              End="0,35.033333725797">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.033333725797" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Excel Source Output1]"
          TopLeft="370.433326189882,135.933331652151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.8666671184037"
              Start="0,0"
              End="0,33.3666671184037">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.3666671184037" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Excel Source Output]"
          TopLeft="617.166638300652,139.533332652317">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.9333328150377"
              Start="0,0"
              End="0,25.4333328150377">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4333328150377" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Derived Column Output]"
          TopLeft="621.599970495702,562.466663044625">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.0666664075187"
              Start="0,0"
              End="0,30.5666664075187">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5666664075187" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Data Conversion Output]"
          TopLeft="622.333304193286,642.133329452144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.5333336467214"
              Start="0,0"
              End="0,49.0333336467214">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.0333336467214" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Leave Data\Leave">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Leave Data\Submission Date">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Leave Data\Contact Info">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Leave Data\Destination -&gt;Leave Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert Timesheet">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167.2,41.6"
          Id="Package\Foreach Loop Container\Insert Timesheet\Description Lookup"
          TopLeft="199.999997019768,485.999992758036" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container\Insert Timesheet\Derived Column"
          TopLeft="199.999997019768,220.999996706843" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination"
          TopLeft="196.999997064471,643.999990403652" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Foreach Loop Container\Insert Timesheet\Derived Column 1"
          TopLeft="200.999997004867,562.999991610646" />
        <NodeLayout
          Size="141.6,41.6"
          Id="Package\Foreach Loop Container\Insert Timesheet\Client Lookup"
          TopLeft="217.999996751547,389.133327527907" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\Insert Timesheet\Data Conversion"
          TopLeft="195.999997079372,308.999995395541" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\Insert Timesheet\Excel Source"
          TopLeft="208.999996885657,138.999997928739" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Timesheet.Paths[Lookup Match Output1]"
          TopLeft="282.699997012317,527.599992758036">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.3999988526107"
              Start="0,0"
              End="0,27.8999988526107">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.8999988526107" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,8.14531192630535,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Timesheet.Paths[Lookup Match Output]"
          TopLeft="286.199996885657,430.733327527907">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.2666652301289"
              Start="0,0"
              End="0,47.7666652301289">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.7666652301289" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,18.0786451150644,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Timesheet.Paths[Excel Source Output]"
          TopLeft="277.699996952713,180.599997928739">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.3999987781048"
              Start="0,0"
              End="0,32.8999987781048">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.8999987781048" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Timesheet.Paths[Derived Column Output1]"
          TopLeft="282.199997034669,604.599991610646">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.399998793006"
              Start="0,0"
              End="0,31.899998793006">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.899998793006" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Timesheet.Paths[Derived Column Output]"
          TopLeft="275.19999704957,262.599996706843">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.3999986886978"
              Start="0,0"
              End="0,38.8999986886978">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.8999986886978" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Timesheet.Paths[Data Conversion Output]"
          TopLeft="273.999997079372,350.599995395541">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.799999672175,38.5333321323661"
              Start="0,0"
              End="14.799999672175,31.0333321323661">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.266666066183" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.266666066183"
                    Point2="0,19.266666066183"
                    Point3="4,19.266666066183" />
                  <mssgle:LineSegment
                    End="10.799999672175,19.266666066183" />
                  <mssgle:CubicBezierSegment
                    Point1="10.799999672175,19.266666066183"
                    Point2="14.799999672175,19.266666066183"
                    Point3="14.799999672175,23.266666066183" />
                  <mssgle:LineSegment
                    End="14.799999672175,31.0333321323661" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Timesheet\Description Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Description]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Timesheet\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Timesheet\Client Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Client]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Timesheet\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>